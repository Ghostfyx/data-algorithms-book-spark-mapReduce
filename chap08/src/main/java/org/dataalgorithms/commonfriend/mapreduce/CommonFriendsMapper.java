package org.dataalgorithms.commonfriend.mapreduce;

import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

import java.io.IOException;

/**
 * @description:
 * The CommonFriendsMapper class implements the map() function.
 *
 * map(key, value) {
 *	// key is the key generated by MapReduce/Hadoop
 *	// value is one line of input<Person><,><Friend1><,><Friend2><,><Friend3><,><Friend4>
 *

 * @author: fanyeuxiang
 * @createDate: 2020-01-17
 */
public class CommonFriendsMapper extends Mapper<LongWritable, Text, Text, Text> {

    @Override
    public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {
        String[] tokens = value.toString().split(",");
        String person = tokens[0];
        String friendsGroup = getFriends(tokens);
        for (int i = 1; i < tokens.length; i++){
            String personFriend = buildSortedKey(person, tokens[i]);
            context.write(new Text(personFriend), new Text(friendsGroup));
        }
    }

    private static String buildSortedKey(String person, String friend) {
        long p = Long.parseLong(person);
        long f = Long.parseLong(friend);
        if (p < f) {
            return person + "," + friend;
        } else {
            return friend + "," + person;
        }
    }

    private String getFriends(String[] tokens) {
        if (tokens.length == 2) {
            return "";
        }
        StringBuilder builder = new StringBuilder();
        for (int i = 1; i < tokens.length; i++) {
            builder.append(tokens[i]);
            if (i < (tokens.length - 1)) {
                builder.append(",");
            }
        }
        return builder.toString();
    }

}
